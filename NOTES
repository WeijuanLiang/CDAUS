###20170228

#matrix crossproduct
x=1:5;x
y=2*1:5;y
x*y
t(x)%*%y
crossprod(x,y)
x%*%t(y)
tcrossprod(x,y)
outer(x,y)
A=matrix(1:6,nrow=2)
A
t(A)
dim(A)
nrow(A)
ncol(A)
#subsetting a matrix
B=A[1,]
C=A[,1]
D=A[2,2]
D
class(D)#只取一个元素之后，类型变成了整数型
E=A[2,2,drop=FALSE]#想要提取A中的元素，不想改变其矩阵的身???
class(E)
F=A[1, ,drop=FALSE];F
class(F)
A1=A[,-2]
A1
det(A1)
eigen(A1)
solve(A1)#求???
A1%*%solve(A1)
diag(4)
diag(2,4,4)
diag(rep(c(1,2),c(3,3)))

#fenjie
B=svd(A1)
B$u%*%diag(B$d)%*%t(B$v)

qr(A1)
cbind(1,A1)
rbind(A1,diag(4,2))
x=runif(20)
summary(x)
hist(x)

#Exercise
x1=matrix(c(1,-1,1,1),nrow = 2);x1
x2=matrix(c(2,4),nrow = 2)
X=solve(x1)%*%x2
X=solve(x1,x2)
X
#set Operations
x=c(1,2,5)
y=c(5,1,8,9)
union(x,y)
intersect(x,y)
setdiff(x,y)
setdiff(y,x)
setequal(x,y)
setequal(x,c(1,2,5))#检???1,2,5是否为其中元素
2 %in% x
2 %in% y
choose(5,2)

x=c(13,5,12)
sort(x)
x=sort(x);x
z=3.5-8i
Re(z)
Im(z)
Mod(z)
#######
x=sqrt(2)
x*x==2#开方相乘并不相???
x*x-2
x=0.3-0.2
y=0.1
x==y
identical(x,y)
all.equal(x,y)
##第一个不可以是数字，???1x
##大写和小写不???
#不要以c命名
#use back.pay not back pay
x <- c(13,5,12)
sort(x);x
x < -5
####Data structrue
rm(list = ls())
data("mtcars")
View(mtcars)
?mtcars
attributes(mtcars)##属???
?attributes
example("attributes")
class(mtcars)
######
#3.1Vectors
a=c(1,2,4,3,3,4)
b=c("one","two","one")
c=c(TRUE,FALSE)
d=c(1,"one")
class(d)
e=c(1,TRUE)
class(e)
f=c(1,"one",TRUE)
class(f)
##矩阵
y=matrix(1:20,nrow = 5,ncol = 4,byrow = TRUE)
y
class(y)
y[2, ]
y[,2]
y[1,4]
y[1:2,c(3,4)]
y[y>=6]
z=as.vector(y)
z
dim(z)=c(4,5)
z
#Add label 给数据添加标???
cells=c(1,5,24,68)
cells
rnames=c("R1","R2")
cnames=c("C1","C2")
mymatrix=matrix(cells,nrow = 2,ncol = 2,byrow = TRUE,dimnames = list(rnames,cnames))
mymatrix
dim(mymatrix)
dim(mymatrix)<-NULL
mymatrix
###Avoiding Unintended Dimension Reduction
z
r=z[2,]
r
attributes(z)
attributes(r)
example("attributes")
#########
x=cbind(a=1:3,pi=pi)
attributes(x)
########
?str
#简要介绍R对象的内部结构，是一个诊断函数并且可选summary，strOptions（）是一个很方便设定选项的函???
#下面将介绍这个函???
str(1:12)
str(ls)
str(args)
str(str)
#########
str(mtcars)
str(z)
str(r)
r=z[2,,drop=FALSE];r
dim(r)

###
library(pixmap);mtrush1=read.pnm("mtrush1.pgm")
mtrush1
plot(mtrush1)
mtrush1@grey[28,88]
locator()
mtrush2=mtrush1
mtrush2@grey[84:164,135:177]=1
plot(mtrush2)
#194-108

blurpart=function(img,rows,cols,q){
  lrows=length(rows)
  lcols=length(cols)
  newimg=img
  randomnoise=matrix(nrow=lrows,ncol=lcols,runif(lrows*lcols))
  newimg@grey[rows,cols]=(1-q)*img@grey[rows,cols]+q*randomnoise
  return(newimg)
}
mtrush3=blurpart(mtrush1,84:163,135:177,0.65)
plot(mtrush3)

###############
#2017???3???2???
###############
##Arrays
z=(1:24)
dim1=c("A1","A2")
dim2=c("B1","B2","B3")
dim3=c("C1","C2","C3","C4")
z=array(z,c(2,3,4),dimnames = list(dim1,dim2,dim3))
z
##Array Transposition
A=array(1:24,dim=c(2,3,4));A
B=aperm(A,c(2,3,1));B
C=array(1:24,dim = c(3,4,2));C

##Data frames
patientID=c(1,2,3,4)
age=c(25,34,28,52)
diabetes=c("Type1","Type2","Type1","Type1")
status=c("poor","Improved","Excellent","Poor")
class((patientID));class(age);class(diabetes);class(status)
patientdata1=cbind(patientID,age,diabetes,status)
patientdata1
class(patientdata1)
class(patientdata1[,1])
class(patientdata1[,2])
##数字被变成了字符
?data.frame
patientdata2=data.frame(patientID,age,diabetes,status)
patientdata2
class(patientdata2)
class(patientdata2$age)
class(patientdata2$status)
names(patientdata1)
names(patientdata2)
is.matrix(patientdata1)
is.matrix(patientdata2)
is.data.frame(patientdata2)
is.data.frame(patientdata1)
str(patientdata2)
#indexing column
View(patientdata2)
patientdata2[4]#as same as the next command
patientdata2["status"]
patientdata2$status#as same as the next command
patientdata2[,4]
#difference
class(patientdata2[4])
class(patientdata2["status"])
class(patientdata2$status)
class(patientdata2[,4])
#index more than one column
patientdata2[1:2]
patientdata2[c(1,3)]
patientdata2[c("diabetes","status")]
patientdata2$age
#index raw
patientdata2[4,]
class(patientdata2[4,])
#index more than one raw/column
patientdata2[2:4,c(1,3,2)]#the order can be changed
#subset
subset(patientdata2,age>30)
subset(patientdata2,age>30,select = c(patientID,status))
subset(patientdata2,age>30,select = -age)
subset(patientdata2,age>30,select = c(age:status))
#You can delete a list compinet by setting it to NuLL
patientdata2[2]=NULL
patientdata2$patientID=NULL
patientdata2
#Add a column
patientdata2$patientID=patientID
patientdata2
#####factor 
#######
str(status)
status=factor(status,ordered = TRUE)
status
str(patientdata2)
status=factor(status,order=TRUE,levels=c("poor","Poor","Improved","Excellent"))
status
status2=factor(status,levels = c("poor","Poor","Improved","Excellent"),labels = c("C","c","B","A"))
status2
##another eg
a=c("A","C","B","C")
class(a)
b=as.factor(a)
b[5]="D" #error
c=as.vector(b)
class(c)
typeof(c)
c[5]="D"
b=as.factor(c)
b
##yinzizhanyongkongjianda
#########
#logical operations
########
isTRUE(6>4)
!isTRUE(8 != 5)###有感叹号的真的变成假的，考试题目
!isTRUE(4<3)
isTRUE(!TRUE)
##
identical("Twins","twins")
identical(4,3.1)
!identical(7,7)

#####
xor(5==6,!FALSE)
xor(!isTRUE(TRUE),6>-1)
xor(4>=9,8!=8.0)
xor(identical(xor,"xor"),7==7.0)
xor(!!TRUE,!!FALSE)
######
ints=sample(10)
ints
sample(10,5)#???1-10中抽???5???
ints>5
which(ints>7)
ints[which(ints>7)]
which.max(ints)
ints[which.max(ints)]
ints[which.min(ints)]
#EXERCISE
##看课件，逻辑运算&&与||的区别，下节课有联系
(TRUE != FALSE)== !(6 == 7)#TRUE
TRUE&c(TRUE,FALSE,FALSE)#TRUE FALSE FALSE
FALSE&c(TRUE,FALSE,FALSE)#FALSE FALSE FALSE
TRUE && c(TRUE, FALSE, FALSE)#TRUE只对应后面向量的第一???
FALSE && c(TRUE, FALSE, FALSE)#FALSE
TRUE | c(TRUE, FALSE, FALSE)#TRUE TRUE TRUE
TRUE || c(TRUE, FALSE, FALSE)#TRUE
FALSE | c(TRUE, FALSE, FALSE)#TRUE
5 > 8 || 6 != 8 && 4 > 3.9#TRUE
FALSE ||TRUE && FALSE
TRUE &&62<62


###3.7Type conversion
ab=c(1,2,3)
is.numeric(ab)
is.vector(ab)
ab <- as.character(ab)
is.numeric(ab)
is.vector(ab)
is.character(ab)

#####list
#drawback of dataframe
patientID=c(1,2,3,4)
age=c(25,34,28)#age=c(25,34,28，NA)
diabetes=c("Type1","Type2","Type1","Type1")
status=c("poor","Improved","Excellent","Poor")
#patientdata2=data.frame(patientID,age,diabetes,status)#报错，处理方法是在缺失未知添加NA
Lst=list(name="Fred",wife="Mary",child.ages=c(4,7,9))
Lst
Lst[[2]]
Lst[[3]][2]
Lst[['name']]
Lst$name
Lst$child.ages[2]
#add component
z=list(a="abc",b=12)
z
z$c="sailing"
z
z$b<-NULL
z

###Partial Matching
x<-list(aardvark=1:5)
x$a
x[["a"]]##cannot find
x[["a",exact=FALSE]]
#########
findwords <- function(tf) {
  # read in the words from the file, into a vector of mode character
  txt <- scan(tf,"")
  wl <- list()
  for (i in 1:length(txt)) {
    wrd <- txt[i] # i-th word in input file
    wl[[wrd]] <- c(wl[[wrd]],i)
  }
  return(wl)
}
txt <- scan("testconcorda.txt","")
txt
class(txt)
findwords("testconcorda.txt")
#如果用矩阵的话，太占用空间了，比如一个字符在第一个和???1000个未知出现，那么就需???1by1000的矩阵来存储???

###Formulas
f <- y ~ x
class(f)
?lm
lm(mpg~hp,mtcars)

###############
#3.10missing value
########
x=c(1,2,NaN,NA,4)
1/0
0/0
is.na(x)
is.nan(x)
#####3.11 attach(), detach(), with()
View(mtcars)
View(mtcars$mpg)
summary(mtcars$mpg)
plot(mtcars$mpg, mtcars$disp)

attach(mtcars)
summary(mpg)
plot(mpg, disp)
detach(mtcars)

with(mtcars, {
  summary(mpg, disp, wt)
  plot(mpg, disp)
  plot(mpg, wt)
})

with(mtcars, {
  nokeepstats <- summary(mpg)
  keepstats <<- summary(mpg)
})
nokeepstats#不可???
keepstats#可用

#############
#Attach Misery
############
#Entering the Same attach Command Twice
search()
attach(mtcars)
search()
str(mtcars)
as.character(mpg)
###去喝水了，忘记是否加载mtcars，回来又加载???,真笨~~~~~~~~
attach(mtcars)
search()
is.character(mpg)#false,这次加载了新的mtcar,所以你之前修改的都不作数了
detach(mtcars)##需要将两个mtcars都detach???
detach(mtcars)
search()

#4 Data input
#4.1 Input and Output
Sys.setenv(JAVA_HOME="C:/Program Files (x86)/Java/jre1.8.0_121")
install.packages("rJava")
install.packages('xlsx')
library(rJava)
library(xlsx)
auto<-read.xlsx("auto.xlsx",1,header=TRUE,as.data.frame=TRUE)
View(auto)
save(auto,file="auto.xlsx")
remove(auto)
load("auto.xlsx")
#Graphic Output
x=rnorm(100);plot(x)
#为了直接访问图形的结果，用下面的函数，使用dev.off()来将结果输出到终端
pdf("nrom.pdf")
win.metafile("nrom.wmf")
png("nrom.png")
jpeg("norm.jpg")
bmp("norm.bmp")
postscript("norm.ps")
dev.off()
#4.2data input
#keyboard
#0
x=1:20
x
#1
mydata=data.frame(age=numeric(0),gender=character(0),weight=numeric(0));mydata#o表示没有数据
mydata=edit(mydata)
class(mydata$gender)
mydata$gender<-NULL#放空gender
View(mydata)
#2
x=numeric(10)#建立10个数字的空间给我们放置数据，此时数据为空
data.entry(x)
x
#3
aa=scan()
inits<-readline("type your initials: ")#从键盘键入一行数???
#scan
#对于dataframe,read.table是极好的，但是它不能处理有不同数据维度的文件
#scan和readline可以灵活处理这些非标准的文件
read.table(file = "rt.txt")#error不能
rt=scan(file="rt.txt");rt#以空格进行区???
rt=scan(file="rt.txt",sep="\n");rt#以回车进行分???
rt=scan(file="rt.txt",sep="\t");rt
rt=scan(file = file.choose(),sep = "\t");rt
#a program
rt=sapply(1:5, function(i)
  as.numeric(na.omit(scan("rt.txt",sep="\t",quiet=T)[(4*i-3):(4*i)])))
#as.numeric(na.omit(scan("rt.txt",sep="\t",quiet=T)[1:4]))
#as.numeric(na.omit(scan("rt.txt",sep="\t",quiet=T)[5:8]))
#as.numeric(na.omit(scan("rt.txt",sep="\t",quiet=T)[9:12]))
#as.numeric(na.omit(scan("rt.txt",sep="\t",quiet=T)[13:16]))
#as.numeric(na.omit(scan("rt.txt",sep="\t",quiet=T)[17:20]))

#Read data into a vector or list from the console or file.
weight<-scan(file="weight.data");weight
Forest<-scan(file="ForestData.txt",what=double(),skip=1)#error Forest中有元素是字符型的，所以用scan会报???

#read.table()
Forest<-read.table(file="ForestData.txt",header=TRUE)
View(Forest)
str(Forest)#本该是字符型的数据变成了因子类型
names(Forest)
Forest<-read.table(file="ForestData.txt",header=TRUE,stringsAsFactors = FALSE)#这样字符型数据就不会变成因子类型???
str(Forest)
#也可以自己指定每个数据的类型
Forest<-read.table(file="ForestData.txt",header=TRUE,
                   colClasses = c("integer","integer","character","character","double","integer","double","double","double"))
str(Forest)
map=read.table("bowens.csv",header=TRUE,sep = ",")
rm(Forest)#移除Forest
Forest<-read.delim(file="ForestData.txt")#read.delim的默认是header=TRUE

#Importing data from a URL
#1
data2 <- read.table ("http://www.bio.ic.ac.uk/research/mjcraw/therbook/data/cancer.txt", header=T)
head(data2)
tail(data2)
urlcancer=url("http://www.bio.ic.ac.uk/research/mjcraw/therbook/data/cancer.txt")
data2=read.table(urlcancer,header = TRUE)
class(data2)
#2
urlhandle=url("http://www.math.smith.edu/r/testdata")
ds=readLines(urlhandle)
View(ds)
class(ds)
#3
ds1=read.table(urlhandle)
class(ds1)#read.tabke默认将数据存为data.frame的格???
#4
sp500=read.table(paste("https://finance.yahoo.com/quote/%5EGSPC/history?",
                       "period1=1457485256&period2=1489021256&interval=1d&filter=history&frequency=1d")),seq=' ')
#################################
#####paste
#当传递单个向量时，paste0和paste的功能类似于as.character
paste0(1:20);paste(1:20);as.character(1:20)
(nth=paste0(1:12,c("st",'nd','rd',rep('th',9))))
paste(month.abb, "is the", nth, "month of the year.", sep = "_*_")
paste("1st", "2nd", "3rd", collapse = ", ")
paste("1st", "2nd", "3rd", sep = ", ")
################################

#Import data from excle
library("xlsx")
Forest<-read.xlsx("ForestData.xlsx",1,header=TRUE,as.data.frame=TRUE)
str(Forest)
levels(Forest$month)#发现月份是乱序的，所以下面按照月份来进行排序
Forest$month<-factor(Forest$month,order=TRUE,
                     levels=c("jan","feb","mar","apr","may","jun",
                              "jul","aug","sep","oct","nov","dec"))
levels(Forest$month)

#Import data from Stata
install.packages("foreign")
library("foreign")
auto=read.dta("auto.dta")
head(auto,10)

#Import data from clipboard
country countryisocode year ppp
Afghanistan AFG 2010 23.81
Albania ALB 2010 58.26
Algeria DZA 2010 47.36

TRData=read.table("clipboard",sep = " ",header = T);TRData
TRData1=read.csv("clipboard");TRData1

#built-in data
data()#查看R中内嵌的数据
data(package= .packages(all.available=TRUE))#按照包将R中的数据展示出来
try(data(package="MASS"))#许多包中都包含数据集，你可以通过try函数来查看他们的名字
#other command
install.packages("Rcmdr")
library(Rcmdr)


#help(dataname)
help(CO2)
#data(dataname,package="rpart")
help(mtcars)
data(mtcars)
help(mtcars)
##################
#4.3 data output
#saving history
history(Inf)#存下历史
savehistory(file = "history.txt")#保存当前历史
loadhistory(file = "history.txt")#恢复历史，然后就可以通过history(Inf)在一个新的session里面运行

#saving graphics
plot(mtcars$wt~mtcars$mpg)
pdf("fig1.pdf")
data(mtcars)
plot(mtcars$wt~mtcars$mpg)
#switch off writing graphics to file
dev.off()
##CTEX.LyX(installer),Knitr
#exporting data to Ascii file
#For.sep <- Forest[Forest$month == "sep" ]#error undefined columns selected
For.sep <- Forest[Forest$month == "sep", ];head(For.sep)
For.sep <- Forest[Forest$month == "sep",1:3 ];head(For.sep)#选出1:3???

write.table(For.sep, file = "For_sep.txt", sep = " ", quote = FALSE, append = FALSE, na = "NA")
#For.sep is the variable that you want to export,
#The sep = " " ensures that the data are separated by a space
#the quote = FALSE avoids quotation marks around character strings (headings)
#na="NA" allows you to specify how missing values are represented
#and append=FALSE opens a new file.

####Save as a R data file
save(For.sep,file="For_sep.Rdata")
load("For_sep.Rdata")
save(list=ls(all=TRUE),file="all.Rdata")

#Pasting into an Excel spreadsheet
#x is a single vector of characters
writeClipboard(as.character(country))#怎么用呀
#checking files from the command line
file.exists("Decay.txt")

#task 1:download single file"'http://www.stateair.net/web/historical/1/1.html'"
#and read the csv file into R environment
install.packages("XML")
install.packages('stringr')
library('XML')
library('stringr')
u='http://www.stateair.net/web/historical/1/1.html'
page_parse=htmlParse(u,encoding='utf-8')
links=getHTMLLinks(u)
links
# "http://www.stateair.net/web/assets/historical/1/Beijing_2017_HourlyPM25_created20170301.csv" 

filename='Beijing_2017_HourlyPM25_created20170301.csv'
u1='http://www.stateair.net/web/assets/historical/1/'
u.full=paste(u1,filename,seq="")
Beijing.2017=read.csv(u.full,skip=3,encoding = 'utf-8')
class(Beijing.2017)
View(Beijing.2017)
head(Beijing.2017$Unit)
?iconv
Beijing.2017$Unit=iconv(Beijing.2017$Unit,from='Windows-1252',to="GB2312")
head(Beijing.2017$Unit)
links
##############################################
linkcsv=links[str_detect(string=links,'.csv')]
linkcsv
class(linkcsv)
linkcsv_list=as.list(linkcsv)
linkcsv_list
#execute download
all.data=data.frame()
for(i in 1:length(linkcsv_list))
{all.data=rbind(all.data,read.csv(linkcsv_list[[i]],skip=3,encoding = 'utf-8'))
Sys.sleep(3)#空三秒钟，假装自己不是机???
}
class(all.data)
head(all.data);tail(all.data)


###########
#加载别人放在Github中的???
install.packages("devtools")
library('devtools')
devtools::install_github('yihui/xaringan')
devtools::install_github('rstudio/addinexamples',type="source")
#https://rstudio.github.io/rstudioaddins
################################
#excise
################################
#########
findwords <- function(tf) {
  # read in the words from the file, into a vector of mode character
  txt <- scan(tf,"")
  wl <- list()
  for (i in 1:length(txt)) {
    wrd <- txt[i] # i-th word in input file
    wl[[wrd]] <- c(wl[[wrd]],i)
  }
  return(wl)
}
txt <- scan("testconcorda.txt","")
txt
class(txt)
words=findwords("testconcorda.txt")
words
length(words)

wdf=data.frame()
wordfre=function(words){
  word=names(words)
  freq=vector()
  for (i in 1:length(words)){
    freq[i]=length(words[[i]])}
  wdf=data.frame(word,freq)
  return(wdf)
}
wdf=wordfre(words)
View(wdf)
#install.packages("wordcloud2")
library('wordcloud2')
wordcloud2(wdf,color='random-dark',shape = 'cloud')
help("wordcloud2")
#需要找到每个词出现的次数的data.frame

###########
#小练习（从中国统计年鉴之中抓取数据）
##########
library('XML')
library('stringr')
NBS="http://www.stats.gov.cn/tjsj/ndsj"
page_parse=htmlParse(NBS,encoding = 'utf-8')
NBSlinks=getHTMLLinks(NBS)
NBSlinks
NBSlinksrar=NBSlinks[str_detect(string = NBSlinks,'.rar')]
NBSlinksrar

#Reading PUMS Census Files
#H:household 106-107 number of person
#2-8:family ID
#P:person information
#23:gender
#25-26:age
# reads in PUMS file pf, extracting the Person records, returning a data
# frame; each row of the output will consist of the Household serial
# number and the fields specified in the list flds; the columns of
# the data frame will have the names of the indices in flds

extractpums <- function(pf,flds) {
  dtf <- data.frame()  # data frame to be built
  con <- file(pf,"r")  # connection
  # process the input file
  repeat {  
    hrec <- readLines(con,1)  # read Household record
    if (length(hrec) == 0) break  # end of file, leave loop 
    # get household serial number
    serno <- intextract(hrec,c(2,8))  
    # how many Person records?
    npr <- intextract(hrec,c(106,107))  
    if (npr > 0)
      for (i in 1:npr) {  
        prec <- readLines(con,1)  # get Person record
        # make this person's row for the data frame
        person <- makerow(serno,prec,flds)  
        # add it to the data frame
        dtf <- rbind(dtf,person)  
      }
  }
  return(dtf)
}

# set up this person's row for the data frame
makerow <- function(srn,pr,fl) {
  l <- list()
  l[["serno"]] <- srn
  for (nm in names(fl)) {
    l[[nm]] <- intextract(pr,fl[[nm]])
  }
  return(l)
}

# extracts an integer field in the string s, in character positions
# rng[1] through rng[2]
intextract <- function(s,rng) {  
  fld <- substr(s,rng[1],rng[2])
  return(as.integer(fld))  
}
pumsdf=extractpums('pumsa.txt',list(Gender=c(23,23),Age=c(25,26)))
pumsdf$Gender=factor(pumsdf$Gender,levels = c(1,2),labels = c('male','Female'))
write.csv(pumsdf,file='pumsdf.csv',quote = FALSE,na='NA')

####################################
#chapter3 Data Management
####################################
#3.1 basic data management
rm(x1);rm(x2)
mydata=data.frame(x1=c(2,2,6,4),x2=c(3,4,2,8))
sumx=x1+x2#error
meanx=(x1+x2)/2#error
#error,R doesn't know that x1 and x2 are from dataframe
mydata=data.frame(x1=c(2,2,6,4),x2=c(3,4,2,8))
sumx=mydata$x1+mydata$x2
meanx=(mydata$x1+mydata$x2)/2
#在data.frame中添加元素
mydata$sumx=mydata$x1+mydata$x2
mydata$meanx=(mydata$x1+mydata$x2)/2
mydata  
  
attach(mydata)  
mydata$sumx=x1+x2
mydata$meanx=(x1+x2)/2
detach(mydata)
mydata
mydata=transform(mydata,sumx=x1+x2,meanx=(x1+x2)/2)
mydata
#####################
#1.1generating data
#####################
0:10
seq(0,1.5,0.1)
seq(6,4,-0.2)
N=c(55,76,92,103,84,88,121,91,65,77,99)
seq(from=0.04,by=0.01,length=11)
seq(0.04,by=0.01,along=N)
sequence(c(4,2,4,1))#1 2 3 4 1 2 1 2 3 4 1
#1.1.2 Generating repeats
rep(9,5)#9 9 9 9 9
rep(1:4,2)#1 2 3 4 1 2 3 4
rep(1:4,each=2)#1 1 2 2 3 3 4 4
rep(1:4,each=2,times=3)#1 1 2 2 3 3 4 4 1 1 2 2 3 3 4 4 1 1 2 2 3 3 4 4
rep(1:4,1:4)#1 2 2 3 3 3 4 4 4 4
rep(1:4,c(4,1,4,2))#1 1 1 1 2 3 3 3 3 4 4
rep(c('cat','dog','gerbil','goldfish','rat'),c(2,3,2,1,3))
# "cat"      "cat"      "dog"      "dog"      "dog"     
# "gerbil"   "gerbil"   "goldfish" "rat"      "rat"     
# "rat"
####################
#1.1.3 Generating factor levels
#gl(n, k, length = n*k, labels = seq_len(n), ordered = FALSE)
#n	     an integer giving the number of levels.
#k	     an integer giving the number of replications.
#length	 an integer giving the length of the result.
#labels	 an optional vector of labels for the resulting factor levels.
#ordered	a logical indicating whether the result should be ordered or not
gl(4,3)
#[1] 1 1 1 2 2 2 3 3 3 4 4 4
#Levels: 1 2 3 4
gl(4,3,24)#111222333444111222333444
#[1] 1 1 1 2 2 2 3 3 3 4 4 4 1 1 1 2 2 2 3 3 3 4 4 4
#Levels: 1 2 3 4
Temp=gl(2,3,6,labels = c('Low','High'))
Soft=gl(3,2,6,labels = c('Hard','Medium','Soft'))
data.frame(Temp,Soft)
#Temp   Soft
#1  Low   Hard
#2  Low   Hard
#3  Low Medium
#4 High Medium
#5 High   Soft
#6 High   Soft

############
#1.2Recoding variables
#change a contiouns variable into a set of categories
#replace miscoded value with correct values
#create a pass/fail variable based on a set of cutoff scores
manager=c(1,2,3,4,5)
data=c('10/24/08','10/28/08','10/1/08','10/12/08','5/1/09')
country=c('US','US','UK','UK','UK')
gender=c('M','F','F','M','F')
age=c(32,56,25,89,99)
leadership=data.frame(manager,data,country,gender,age)
leadership
#The statement variable[condition]=expression wil only make the assignmement when condition is TRUe
leadership$age[leadership$age == 99]=NA
leadership$age[leadership$age>=55&leadership$age<=75]='Middle'
leadership$age[leadership$age<55]='Young'
leadership

leadership$age[leadership$age==99]=NA
leadership$agecat[leadership$age>75]='Elder'
leadership$agecat[leadership$age>=55&leadership$age<=75]='Middle'
leadership$agecat[leadership$age<55]='Young'
leadership

#This code can be written more compactly as

leadership=within(leadership,{
                  agecat=NULL
                  agecat[age>75]='Elder'
                  agecat[age>=55&age<=75]='Middle'
                  agecat[age<55]="young"
                  agecat[age==99]=NA})

#1.3 Renaming variables
help('fix')
fix(leadership)
#fix invokes edit on x and then assigns the new (edited) version of x in the user's workspace.
names(leadership)[2]='testDate'
leadership
names(leadership)[1:2]=c('ID','testDate')
leadership

#1.4Missing value
#is.na()helps you to test for the presence of missing values
y=c(1,2,3,NA)
is.na(y)#FALSE FALSE FALSE  TRUE
y=c(1,2,2,NaN)
is.na(y)#FALSE FALSE FALSE  TRUE

#Excluding missing values
x=c(1,2,NA,3)
y=x[1]+x[2]+x[3]+x[4]
print(y)#NA

y=sum(x,na.rm = TRUE)#remove the Na
print(y)#6

#a common task is to remove missing values
bad=is.na(x)
x[!bad]#1 2 3
#multiple things you want to take the subset with no missing value
x=c(1,2,NA,4,NA,5)
y=c('a','b','c','d',NA,'f')
good=complete.cases(x,y)
good     #TRUE  TRUE FALSE  TRUE FALSE  TRUE
x[good]  #1 2 4 5
y[good]  #"a" "b" "d" "f"
help('complete.cases')

#you can remove any observation with missing data by using na.omit()
leadership
good=complete.cases(leadership)
good     #TRUE  TRUE  TRUE  TRUE FALSE
newdata=leadership[good, ]
newdata
newdata=na.omit(leadership)
newdata

#Using NULL
z=NULL
for (i in 1:10){
  if(i%%2 == 0)
    z=c(z,i)
}
z#2  4  6  8 10
help('%%')
#But if we use NA,we would pick up an unwanted NA
z=NA
for (i in 1:10){
  if(i%%2 == 0)
    z=c(z,i)
}
z#NA 2  4  6  8 10

#consider the case both NA and NAN contained
x=c(1,2,NA,4,NA,NaN)
y=c('a','b','c','d',NA,'f')
good=complete.cases(x,y)
good    #TRUE  TRUE FALSE  TRUE FALSE  TRUE the NaN get a True
x[good]#1 2 4 
y[good]#"a" "b" "d"

#1.5 Date values
x=as.Date('1970-01-01');x
unclass(x)#0
unclass(as.Date('1970-01-01'))
#POSIXct stores the number of second since the oringin
#PoSIXlt keep the dates as a list of time attributes
x=Sys.time()
x             #"2017-03-16 17:43:43 CST"
class(x)      #"POSIXct" "POSIXt"
unclass(x)    #1970年1月1日至今的秒数
x$sec         #error

p=as.POSIXlt(x)
p             #"2017-03-16 17:43:43 CST"
class(p)      #"POSIXlt" "POSIXt"
names(unclass(p))
p$sec         # 43.30886
unclass(p)    #列表信息
class(unclass(p)) #list

today=Sys.Date()
today
as.numeric(as.Date('1970-01-03'))
as.numeric(as.Date('1969-01-01'))
#define the format of output 
format(today,format='%a %m %d %Y')
format(today,format='%a %m %d %y')
format(today,format='%B')

dates=c('02/27/92','02/11/93')
class(dates)
dates=as.Date(dates,"%m/%d/%y")
class(dates)
unclass(dates)

startdate=as.Date('2017-03-16')
enddate=as.Date('2019-06-21')
days=enddate-startdate
days
difftime(enddate,startdate,units = "weeks")#feedback the weeks

Birthday=as.Date('1995-04-19')
today=as.Date('2019-08-19')
difftime(today,Birthday,units = "weeks") #1269.714
difftime(today,Birthday,units = "days")  #8888
